/*

The MIT License (MIT)

Copyright (c) 2014 Juan Cazala - juancazala.com

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE



********************************************************************************************
                                         SYNAPTIC
********************************************************************************************

Synaptic is a javascript neural network library for node.js and the browser, its generalized
algorithm is architecture-free, so you can build and train basically any type of first order
or even second order neural network architectures.

http://en.wikipedia.org/wiki/Recurrent_neural_network#Second_Order_Recurrent_Neural_Network

The library includes a few built-in architectures like multilayer perceptrons, multilayer
long-short term memory networks (LSTM) or liquid state machines, and a trainer capable of
training any given network, and includes built-in training tasks/tests like solving an XOR,
passing a Distracted Sequence Recall test or an Embeded Reber Grammar test.

The algorithm implemented by this library has been taken from Derek D. Monner's paper:


A generalized LSTM-like training algorithm for second-order recurrent neural networks
http://www.overcomplete.net/papers/nn2012.pdf

There are references to the equations in that paper commented through the source code.


********************************************************************************************/
!function t(e,i,n){function r(s,a){if(!i[s]){if(!e[s]){var c="function"==typeof require&&require;if(!a&&c)return c(s,!0);if(o)return o(s,!0);var h=new Error("Cannot find module '"+s+"'");throw h.code="MODULE_NOT_FOUND",h}var u=i[s]={exports:{}};e[s][0].call(u.exports,function(t){var i=e[s][1][t];return r(i?i:t)},u,u.exports,t,e,i,n)}return i[s].exports}for(var o="function"==typeof require&&require,s=0;s<n.length;s++)r(n[s]);return r}({1:[function(t,e){var i=t("./layer"),n=t("./network"),r=t("./trainer"),o={Perceptron:function(){var t=Array.prototype.slice.call(arguments);if(t.length<3)throw"Error: not enough layers (minimum 3) !!";var e=t.shift(),n=t.pop(),o=t,s=new i(e),a=[],c=new i(n),h=s;for(level in o){var u=o[level],p=new i(u);a.push(p),h.project(p),h=p}h.project(c),this.set({input:s,hidden:a,output:c}),this.trainer=new r(this)},LSTM:function(){var t=Array.prototype.slice.call(arguments);if(t.length<3)throw"Error: not enough layers (minimum 3) !!";var e=t.shift(),n=t.pop(),o=t,s=new i(e),a=[],c=new i(n),h=null;for(var u in o){var p=o[u],f=new i(p).set({bias:1}),l=new i(p).set({bias:1}),v=new i(p),d=new i(p).set({bias:1});a.push(f),a.push(l),a.push(v),a.push(d);var g=s.project(v);if(s.project(f),s.project(l),s.project(d),null!=h){var y=h.project(v);h.project(f),h.project(l),h.project(d)}var m=v.project(c),w=v.project(v);v.project(f,i.connectionType.ONE_TO_ONE),v.project(l,i.connectionType.ONE_TO_ONE),v.project(d,i.connectionType.ONE_TO_ONE),f.gate(g,i.gateType.INPUT),l.gate(w,i.gateType.ONE_TO_ONE),d.gate(m,i.gateType.OUTPUT),null!=h&&f.gate(y,i.gateType.INPUT),h=v}s.project(c),this.set({input:s,hidden:a,output:c}),this.trainer=new r(this)},Liquid:function(t,e,n,o,s){for(var a=new i(t),c=new i(e),h=new i(n),u=c.neurons(),p=[],f=0;o>f;f++){var l=Math.random()*u.length|0,v=Math.random()*u.length|0,d=u[l].project(u[v]);p.push(d)}for(var g=0;s>g;g++){var y=Math.random()*u.length|0,d=Math.random()*p.length|0;u[y].gate(p[d])}a.project(c),c.project(h),this.set({input:a,hidden:[c],output:h}),this.trainer=new r(this)},Hopfield:function(t){var e=new i(t),n=new i(t);e.project(n,i.connectionType.ALL_TO_ALL),this.set({input:e,hidden:[],output:n});var s=new r(this),a=o.Hopfield.prototype;a.learn=a.learn||function(t){var e=[];for(var i in t)e.push({input:t[i],output:t[i]});return s.train(e,{iterations:5e5,error:5e-5,rate:1})},a.feed=a.feed||function(t){var e=this.activate(t),t=[];for(var i in e)t[i]=e[i]>.5?1:0;return t}}};for(var s in o)o[s].prototype=new n,o[s].prototype.constructor=o[s];e&&(e.exports=o)},{"./layer":2,"./network":3,"./trainer":6}],2:[function(t,e){function i(t,e){for(this.size=0|t,this.list=[],this.label=e||null;t--;){var i=new n;this.list.push(i)}}var n=t("./neuron");i.prototype={activate:function(t){var e=[];if("undefined"!=typeof t){if(t.length!=this.size)throw"INPUT size and LAYER size must be the same to activate!";for(var i in this.list){var n=this.list[i],r=n.activate(t[i]);e.push(r)}}else for(var i in this.list){var n=this.list[i],r=n.activate();e.push(r)}return e},propagate:function(t,e){if("undefined"!=typeof e){if(e.length!=this.size)throw"TARGET size and LAYER size must be the same to propagate!";for(var i=this.list.length-1;i>=0;i--){var n=this.list[i];n.propagate(t,e[i])}}else for(var i=this.list.length-1;i>=0;i--){var n=this.list[i];n.propagate(t)}},project:function(e,n,r){if(e instanceof t("./network")&&(e=e.layers.input),!(e instanceof i))throw"Invalid argument, you can only project connections to LAYERS and NETWORKS!";return this.connected(e)?void 0:new i.connection(this,e,n,r)},gate:function(t,e){if(e==i.gateType.INPUT){if(t.to.size!=this.size)throw"GATER layer and CONNECTION.TO layer must be the same size in order to gate!";for(var n in t.to.list){var r=t.to.list[n],o=this.list[n];for(var s in r.connections.inputs){var a=r.connections.inputs[s];a.ID in t.connections&&o.gate(a)}}}else if(e==i.gateType.OUTPUT){if(t.from.size!=this.size)throw"GATER layer and CONNECTION.FROM layer must be the same size in order to gate!";for(var n in t.from.list){var r=t.from.list[n],o=this.list[n];for(var c in r.connections.projected){var a=r.connections.projected[c];a.ID in t.connections&&o.gate(a)}}}else if(e==i.gateType.ONE_TO_ONE){if(t.size!=this.size)throw"The number of GATER UNITS must be the same as the number of CONNECTIONS to gate!";for(var n in t.list){var o=this.list[n],a=t.list[n];o.gate(a)}}},selfconnected:function(){for(var t in this.list){var e=this.list[t];if(!e.selfconnected())return!1}return!0},connected:function(t){var e=0;for(var n in this.list)for(var r in t.list){var o=this.list[n],s=t.list[r],a=o.connected(s);"projected"==a.type&&e++}if(e==this.size*t.size)return i.connectionType.ALL_TO_ALL;e=0;for(var c in this.list){var o=this.list[c],s=t.list[c],a=o.connected(s);"projected"==a.type&&e++}return e==this.size?i.connectionType.ONE_TO_ONE:void 0},clear:function(){for(var t in this.list){var e=this.list[t];e.clear()}},reset:function(){for(var t in this.list){var e=this.list[t];e.reset()}},neurons:function(){return this.list},add:function(t){this.neurons[t.ID]=t||new n,this.list.push(t),this.size++},set:function(t){t=t||{};for(var e in this.list){var i=this.list[e];t.label&&(i.label=t.label+"_"+i.ID),t.squash&&(i.squash=t.squash),t.bias&&(i.bias=t.bias)}return this}},i.connection=function(t,e,n,r){if(this.ID=i.connection.uid(),this.from=t,this.to=e,this.selfconnection=e==t,this.type=n,this.connections={},this.list=[],this.size=0,"undefined"==typeof this.type&&(this.type=t==e?i.connectionType.ONE_TO_ONE:i.connectionType.ALL_TO_ALL),this.type==i.connectionType.ALL_TO_ALL)for(var o in this.from.list)for(var s in this.to.list){var a=this.from.list[o],c=this.to.list[s],h=a.project(c,r);this.connections[h.ID]=h,this.size=this.list.push(h)}else if(this.type==i.connectionType.ONE_TO_ONE)for(var u in this.from.list){var a=this.from.list[u],c=this.to.list[u],h=a.project(c,r);this.connections[h.ID]=h,this.size=this.list.push(h)}},i.connectionType={},i.connectionType.ALL_TO_ALL="ALL TO ALL",i.connectionType.ONE_TO_ONE="ONE TO ONE",i.gateType={},i.gateType.INPUT="INPUT",i.gateType.OUTPUT="OUTPUT",i.gateType.ONE_TO_ONE="ONE TO ONE",function(){var t=0;i.connection.uid=function(){return t++}}(),e&&(e.exports=i)},{"./network":3,"./neuron":4}],3:[function(t,e){function i(t){"undefined"!=typeof t&&(this.layers=t||{input:null,hidden:{},output:null},this.optimized=null)}var n=t("./neuron"),r=t("./layer");i.prototype={activate:function(t){if(this.optimized===!1){this.layers.input.activate(t);for(var e in this.layers.hidden)this.layers.hidden[e].activate();return this.layers.output.activate()}return null==this.optimized&&this.optimize(),this.optimized.activate(t)},propagate:function(t,e){if(this.optimized===!1){this.layers.output.propagate(t,e);var i=[];for(var n in this.layers.hidden)i.push(this.layers.hidden[n]);i.reverse();for(var n in i)i[n].propagate(t)}else null==this.optimized&&this.optimize(),this.optimized.propagate(t,e)},project:function(t,e,n){if(this.optimized&&this.optimized.reset(),t instanceof i)return this.layers.output.project(t.layers.input,e,n);if(t instanceof r)return this.layers.output.project(t,e,n);throw"Invalid argument, you can only project connections to LAYERS and NETWORKS!"},gate:function(t,e){this.optimized&&this.optimized.reset(),this.layers.output.gate(t,e)},clear:function(){this.restore();var t=this.layers.input,e=this.layers.output;t.clear();for(var i in this.layers.hidden){var n=this.layers.hidden[i];n.clear()}e.clear(),this.optimized&&this.optimized.reset()},reset:function(){this.restore();var t=this.layers.input,e=this.layers.output;t.reset();for(var i in this.layers.hidden){var n=this.layers.hidden[i];n.reset()}e.reset(),this.optimized&&this.optimized.reset()},optimize:function(){var t=this,e={},i=this.neurons();for(var n in i){for(var r=i[n].neuron,o=i[n].layer;r.neuron;)r=r.neuron;e=r.optimize(e,o)}e.propagation_sentences.reverse();var s="";s+="var F = Float64Array ? new Float64Array("+e.memory+") : []; ";for(var n in e.variables)s+="F["+e.variables[n].id+"] = "+(e.variables[n].value||0)+"; ";s+="var activate = function(input){\n";for(var n in e.inputs)s+="F["+e.inputs[n]+"] = input["+n+"]; ";for(var n in e.activation_sentences)s+=e.activation_sentences[n].join(" "),s+=e.trace_sentences[n].join(" ");s+=" var output = []; ";for(var n in e.outputs)s+="output["+n+"] = F["+e.outputs[n]+"]; ";s+="return output; }; ",s+="var propagate = function(rate, target){\n",s+="F["+e.variables.rate.id+"] = rate; ";for(var n in e.targets)s+="F["+e.targets[n]+"] = target["+n+"]; ";for(var n in e.propagation_sentences)s+=e.propagation_sentences[n].join(" ")+" ";s+=" };\n",s+="var ownership = function(memoryBuffer){\nF = memoryBuffer;\nthis.memory = F;\n};\n",s+="return {\nmemory: F,\nactivate: activate,\npropagate: propagate,\nownership: ownership\n};",s=s.split(";").join(";\n");var a=new Function(s),c=a();c.data={variables:e.variables,activate:e.activation_sentences,propagate:e.propagation_sentences,trace:e.trace_sentences,inputs:e.inputs,outputs:e.outputs,check_activation:this.activate,check_propagation:this.propagate},c.reset=function(){t.optimized&&(t.optimized=null,t.activate=c.data.check_activation,t.propagate=c.data.check_propagation)},this.optimized=c,this.activate=c.activate,this.propagate=c.propagate},restore:function(){if(this.optimized){var t=this.optimized,e=function(){var e=Array.prototype.slice.call(arguments),i=e.shift(),n=e.pop(),r=n+"_";for(var o in e)r+=e[o]+"_";r+=i.ID;var s=t.memory,a=t.data.variables;return r in a?s[a[r].id]:0},i=this.neurons();for(var n in i){for(var r=i[n].neuron;r.neuron;)r=r.neuron;r.state=e(r,"state"),r.old=e(r,"old"),r.activation=e(r,"activation"),r.bias=e(r,"bias");for(var o in r.trace.elegibility)r.trace.elegibility[o]=e(r,"trace","elegibility",o);for(var s in r.trace.extended)for(var o in r.trace.extended[s])r.trace.extended[s][o]=e(r,"trace","extended",s,o)}for(var n in i){for(var r=i[n].neuron;r.neuron;)r=r.neuron;for(var a in r.connections.projected){var c=r.connections.projected[a];c.weight=e(c,"weight"),c.gain=e(c,"gain")}}}},neurons:function(){var t=[],e=this.layers.input.neurons(),i=this.layers.output.neurons();for(var n in e)t.push({neuron:e[n],layer:"input"});for(var r in this.layers.hidden){var o=this.layers.hidden[r].neurons();for(var n in o)t.push({neuron:o[n],layer:r})}for(var n in i)t.push({neuron:i[n],layer:"output"});return t},inputs:function(){return this.layers.input.size},outputs:function(){return this.layers.output.size},set:function(t){this.layers=t,this.optimized&&this.optimized.reset()},setOptimize:function(t){this.restore(),this.optimized&&this.optimized.reset(),this.optimized=t?null:!1},toJSON:function(t){this.restore();var e=this.neurons(),i=[],r=[],o={};for(var s in e){for(var a=e[s].neuron;a.neuron;)a=a.neuron;o[a.ID]=s;var c={trace:{elegibility:{},extended:{}},state:a.state,old:a.old,activation:a.activation,bias:a.bias,layer:e[s].layer};c.squash=a.squash==n.squash.LOGISTIC?"LOGISTIC":a.squash==n.squash.TANH?"TANH":a.squash==n.squash.IDENTITY?"IDENTITY":a.squash==n.squash.HLIM?"HLIM":null,i.push(c)}if(!t)for(var s in i){var c=i[s];for(var h in a.trace.elegibility)c.trace.elegibility[h]=a.trace.elegibility[h];for(var u in a.trace.extended){c.trace.extended[u]={};for(var h in a.trace.extended[u])c.trace.extended[o[u]][h]=a.trace.extended[u][h]}}for(var s in e){for(var a=e[s].neuron;a.neuron;)a=a.neuron;for(var p in a.connections.projected){var f=a.connections.projected[p];r.push({from:o[f.from.ID],to:o[f.to.ID],weight:f.weight,gater:f.gater?o[f.gater.ID]:null})}a.selfconnected()&&r.push({from:o[a.ID],to:o[a.ID],weight:a.selfconnection.weight,gater:a.selfconnection.gater?o[a.selfconnection.gater.ID]:null})}return{neurons:i,connections:r}},standalone:function(){this.optimized||this.optimize();var t=this.optimized.data,e="function (input) {\n";for(var i in t.inputs)e+="F["+t.inputs[i]+"] = input["+i+"];\n";for(var n in t.activate)for(var r in t.activate[n])e+=t.activate[n][r]+"\n";e+="var output = [];\n";for(var i in t.outputs)e+="output["+i+"] = F["+t.outputs[i]+"];\n";e+="return output;\n}";var o=e.match(/F\[(\d+)\]/g),s=0,a={};for(var c in o){var h=o[c].match(/\d+/)[0];h in a||(a[h]=s++)}var u="F = {\n";for(var i in a)u+=a[i]+": "+this.optimized.memory[i]+",\n";return u=u.substring(0,u.length-2)+"\n};\n",u="var run = "+e.replace(/F\[(\d+)]/g,function(t){return"F["+a[t.match(/\d+/)[0]]+"]"}).replace("{\n","{\n"+u)+";\n",u+="return run",new Function(u)()},worker:function(){this.optimized||this.optimize();var t="var inputs = "+this.optimized.data.inputs.length+";\n";t+="var outputs = "+this.optimized.data.outputs.length+";\n",t+="var F = null;\n",t+="var activate = "+this.optimized.activate.toString()+";\n",t+="var propagate = "+this.optimized.propagate.toString()+";\n",t+="onmessage = function(e){\n",t+="F = e.data.memoryBuffer;\n",t+="if (e.data.action == 'activate'){\n",t+="if (e.data.input.length == inputs){\n",t+="postMessage( { action: 'activate', output: activate(e.data.input), memoryBuffer: F }, [F.buffer]);\n",t+="}\n}\nelse if (e.data.action == 'propagate'){\n",t+="propagate(e.data.rate, e.data.target);\n",t+="postMessage({ action: 'propagate', memoryBuffer: F }, [F.buffer]);\n",t+="}\n}\n";var e=new Blob([t]),i=window.URL.createObjectURL(e);return new Worker(i)},clone:function(t){return i.fromJSON(this.toJSON(t))}},i.fromJSON=function(t){var e=[],o={input:new r,hidden:[],output:new r};for(var s in t.neurons){var a=t.neurons[s],c=new n;c.trace.elegibility=a.trace.elegibility,c.trace.extended=a.trace.extended,c.state=a.state,c.old=a.old,c.activation=a.activation,c.bias=a.bias,c.squash=a.squash in n.squash?n.squash[a.squash]:n.squash.LOGISTIC,e.push(c),"input"==a.layer?o.input.add(c):"output"==a.layer?o.output.add(c):("undefined"==typeof o.hidden[a.layer]&&(o.hidden[a.layer]=new r),o.hidden[a.layer].add(c))}for(var s in t.connections){var a=t.connections[s],h=e[a.from],u=e[a.to],p=a.weight,f=e[a.gater],l=h.project(u,p);f&&f.gate(l)}return new i(o)},e&&(e.exports=i)},{"./layer":2,"./neuron":4}],4:[function(t,e){function i(){this.ID=i.uid(),this.label=null,this.connections={inputs:{},projected:{},gated:{}},this.error={responsibility:0,projected:0,gated:0},this.trace={elegibility:{},extended:{},influences:{}},this.state=0,this.old=0,this.activation=0,this.selfconnection=new i.connection(this,this,0),this.squash=i.squash.LOGISTIC,this.neighboors={},this.bias=.2*Math.random()-.1}i.prototype={activate:function(t){if("undefined"!=typeof t)return this.activation=t,this.derivative=0,this.bias=0,this.activation;this.old=this.state,this.state=this.selfconnection.gain*this.selfconnection.weight*this.state+this.bias;for(var e in this.connections.inputs){var t=this.connections.inputs[e];this.state+=t.from.activation*t.weight*t.gain}this.activation=this.squash(this.state),this.derivative=this.squash(this.state,!0);for(var e in this.connections.inputs){var t=this.connections.inputs[e];this.trace.elegibility[t.ID]=this.selfconnection.gain*this.selfconnection.weight*this.trace.elegibility[t.ID]+t.gain*t.from.activation;for(var i in this.trace.extended){var n=this.trace.extended[i],r=this.neighboors[i],o=r.selfconnection.gater==this?r.old:0;for(var s in this.trace.influences[r.ID])o+=this.trace.influences[r.ID][s].weight*this.trace.influences[r.ID][s].from.activation;n[t.ID]=r.selfconnection.gain*r.selfconnection.weight*n[t.ID]+this.derivative*this.trace.elegibility[t.ID]*o}}for(var a in this.connections.gated)this.connections.gated[a].gain=this.activation;return this.activation},propagate:function(t,e){var i=0;"undefined"!=typeof e&&(i=e-this.activation);for(var n in this.connections.projected){var r=this.connections.projected[n],o=r.to;i+=o.error.responsibility*r.gain*r.weight}this.error.projected=this.derivative*i,i=0;for(var n in this.trace.extended){var o=this.neighboors[n],s=o.selfconnection.gater==this?o.old:0;for(var a in this.trace.influences[n])s+=this.trace.influences[n][a].weight*this.trace.influences[o.ID][a].from.activation;i+=o.error.responsibility*s}this.error.gated=this.derivative*i,this.error.responsibility=this.error.projected+this.error.gated,t=t||.1;for(var n in this.connections.inputs){var a=this.connections.inputs[n],c=this.error.projected*this.trace.elegibility[a.ID];for(var n in this.trace.extended){var o=this.neighboors[n];c+=o.error.responsibility*this.trace.extended[o.ID][a.ID]}a.weight+=t*c}this.bias+=t*this.error.responsibility},project:function(t,e){if(t==this)return this.selfconnection.weight=1,this.selfconnection;var n=this.connected(t);if(n&&"projected"==n.type)return"undefined"!=typeof e&&(n.connection.weight=e),n.connection;var r=new i.connection(this,t,e);this.connections.projected[r.ID]=r,this.neighboors[t.ID]=t,t.connections.inputs[r.ID]=r,t.trace.elegibility[r.ID]=0;for(var o in t.trace.extended){var s=t.trace.extended[o];s[r.ID]=0}return r},gate:function(t){this.connections.gated[t.ID]=t;var e=t.to;if(!(e.ID in this.trace.extended)){this.neighboors[e.ID]=e;var i=this.trace.extended[e.ID]={};for(var n in this.connections.inputs){var r=this.connections.inputs[n];i[r.ID]=0}}e.ID in this.trace.influences?this.trace.influences[e.ID].push(t):this.trace.influences[e.ID]=[t],t.gater=this},selfconnected:function(){return 0!==this.selfconnection.weight},connected:function(t){var e={type:null,connection:!1};if(this==t)return this.selfconnected()?(e.type="selfconnection",e.connection=this.selfconnection,e):!1;for(var i in this.connections)for(var n in this.connections[i]){var n=this.connections[i][n];if(n.to==t)return e.type=i,e.connection=n,e;if(n.from==t)return e.type=i,e.connection=n,e}return!1},clear:function(){for(var t in this.trace.elegibility)this.trace.elegibility[t]=0;for(var t in this.trace.extended)for(var e in this.trace.extended[t])this.trace.extended[t][e]=0;this.error.responsibility=this.error.projected=this.error.gated=0},reset:function(){this.clear();for(var t in this.connection)for(var e in this.connection[t])this.connection[t][e].weight=.2*Math.random()-.1;this.bias=.2*Math.random()-.1,this.old=this.state=this.activation=0},optimize:function(t,e){t=t||{};var n=[],r=[],o=[],s=0|t.memory,a=t.inputs||[],c=t.targets||[],h=t.outputs||[],u=t.variables||{},p=t.activation_sentences||[],f=t.trace_sentences||[],l=t.propagation_sentences||[],v=function(){var t=Array.prototype.slice.call(arguments);if(1==t.length){if("target"==t[0]){var e="target_"+c.length;c.push(s)}else var e=t[0];return e in u?u[e]:u[e]={value:0,id:s++}}var i=t.length>2;if(i)var n=t.pop();var r=t.shift(),o=t.pop();if(!i)var n=r[o];var e=o+"_";for(var a in t)e+=t[a]+"_";return e+=r.ID,e in u?u[e]:u[e]={value:n,id:s++}},d=function(){var t=Array.prototype.slice.call(arguments),e=t.pop(),i="";for(var n in t)i+="string"==typeof t[n]?t[n]:"F["+t[n].id+"]";e.push(i+";")},g=function(t){for(var e in t)if(t.hasOwnProperty(e))return!1;return!0},y=g(this.connections.projected),m=g(this.connections.gated),w="input"==e?!0:g(this.connections.inputs),I="output"==e?!0:y&&m,b=v("rate"),T=v(this,"activation");if(w)a.push(T.id);else{p.push(n),f.push(r),l.push(o);var D=v(this,"old"),O=v(this,"state"),z=v(this,"bias");if(this.selfconnection.gater)var j=v(this.selfconnection,"gain");if(this.selfconnected())var x=v(this.selfconnection,"weight");d(D," = ",O,n),this.selfconnected()?this.selfconnection.gater?d(O," = ",j," * ",x," * ",O," + ",z,n):d(O," = ",x," * ",O," + ",z,n):d(O," = ",z,n);for(var N in this.connections.inputs){var _=this.connections.inputs[N],L=v(_.from,"activation"),E=v(_,"weight");if(_.gater)var q=v(_,"gain");this.connections.inputs[N].gater?d(O," += ",L," * ",E," * ",q,n):d(O," += ",L," * ",E,n)}var A=v(this,"derivative");switch(this.squash){case i.squash.LOGISTIC:d(T," = (1 / (1 + Math.exp(-",O,")))",n),d(A," = ",T," * (1 - ",T,")",n);break;case i.squash.TANH:var M=v("aux"),k=v("aux_2");d(M," = Math.exp(",O,")",n),d(k," = 1 / ",M,n),d(T," = (",M," - ",k,") / (",M," + ",k,")",n),d(A," = 1 - (",T," * ",T,")",n);break;case i.squash.IDENTITY:d(T," = ",O,n),d(A," = 1",n);break;case i.squash.HLIM:d(T," = +(",O," > 0)",n),d(A," = 1",n)}for(var N in this.connections.inputs){var _=this.connections.inputs[N];if(_.gater)var q=v(_,"gain");var L=v(_.from,"activation"),F=v(this,"trace","elegibility",_.ID,this.trace.elegibility[_.ID]);this.selfconnected()?this.selfconnection.gater?_.gater?d(F," = ",j," * ",x," * ",F," + ",q," * ",L,r):d(F," = ",j," * ",x," * ",F," + ",L,r):_.gater?d(F," = ",x," * ",F," + ",q," * ",L,r):d(F," = ",x," * ",F," + ",L,r):_.gater?d(F," = ",q," * ",L,r):d(F," = ",L,r);for(var S in this.trace.extended){var U=this.trace.extended[S],C=this.neighboors[S],P=v("aux"),R=v(C,"old");C.selfconnection.gater==this?d(P," = ",R,r):d(P," = 0",r);for(var B in this.trace.influences[C.ID]){var G=v(this.trace.influences[C.ID][B],"weight"),H=v(this.trace.influences[C.ID][B].from,"activation");d(P," += ",G," * ",H,r)}var F=v(this,"trace","elegibility",_.ID,this.trace.elegibility[_.ID]),U=v(this,"trace","extended",C.ID,_.ID,this.trace.extended[C.ID][_.ID]);if(C.selfconnected())var Y=v(C.selfconnection,"weight");if(C.selfconnection.gater)var J=v(C.selfconnection,"gain");C.selfconnected()?C.selfconnection.gater?d(U," = ",J," * ",Y," * ",U," + ",A," * ",F," * ",P,r):d(U," = ",Y," * ",U," + ",A," * ",F," * ",P,r):d(U," = ",A," * ",F," * ",P,r)}}for(var X in this.connections.gated){var W=v(this.connections.gated[X],"gain");d(W," = ",T,n)}}if(!w){var K=v(this,"error","responsibility",this.error.responsibility);if(I){var V=v("target");d(K," = ",V," - ",T,o),d(K," *= ",A,o);for(var S in this.connections.inputs){var _=this.connections.inputs[S],F=v(this,"trace","elegibility",_.ID,this.trace.elegibility[_.ID]),E=v(_,"weight");d(E," += ",b," * (",K," * ",F,")",o)}h.push(T.id)}else if(y||m){if(m){d(K," = 0",o);for(var S in this.connections.projected){var X=this.connections.projected[S],C=X.to,Q=v(X,"weight"),Z=v(C,"error","responsibility",C.error.responsibility);if(X.gater){var $=v(X,"gain");d(K," += ",Z," * ",$," * ",Q,o)}else d(K," += ",Z," * ",Q,o)}d(K," *= ",A,o);for(var S in this.connections.inputs){var _=this.connections.inputs[S],F=v(this,"trace","elegibility",_.ID,this.trace.elegibility[_.ID]),E=v(_,"weight");d(E," += ",b," * (",K," * ",F,")",o)}}else if(y){d(K," = 0",o);for(var S in this.trace.extended){var C=this.neighboors[S],P=v("aux"),R=v(C,"old");C.selfconnection.gater==this?d(P," = ",R,o):d(P," = 0",o);for(var _ in this.trace.influences[C.ID]){var X=this.trace.influences[C.ID][_],Q=v(X,"weight"),te=v(X.from,"activation");d(P," += ",Q," * ",te,o)}var Z=v(C,"error","responsibility",C.error.responsibility);d(K," += ",Z," * ",P,o)}d(K," *= ",A,o);for(var S in this.connections.inputs){var _=this.connections.inputs[S],ee=v("aux");d(ee," = 0",o);for(var S in this.trace.extended){var C=this.neighboors[S],Z=v(C,"error","responsibility",C.error.responsibility),U=v(this,"trace","extended",C.ID,_.ID,this.trace.extended[C.ID][_.ID]);d(ee," += ",Z," * ",U,o)}var E=v(_,"weight");d(E," += ",b," * ",ee,o)}}}else{var ie=v("aux");for(var S in this.connections.projected){var X=this.connections.projected[S],C=X.to,Q=v(X,"weight"),Z=v(C,"error","responsibility",C.error.responsibility);if(X.gater){var $=v(X,"gain");d(ie," += ",Z," * ",$," * ",Q,o)}else d(ie," += ",Z," * ",Q,o)}var ne=v(this,"error","projected",this.error.projected);d(ne," = ",A," * ",ie,o),d(ie," = 0",o);for(var S in this.trace.extended){var C=this.neighboors[S],P=v("aux_2"),R=v(C,"old");C.selfconnection.gater==this?d(P," = ",R,o):d(P," = 0",o);for(var _ in this.trace.influences[C.ID]){var X=this.trace.influences[C.ID][_],Q=v(X,"weight"),te=v(X.from,"activation");d(P," += ",Q," * ",te,o)}var Z=v(C,"error","responsibility",C.error.responsibility);d(ie," += ",Z," * ",P,o)}var re=v(this,"error","gated",this.error.gated);d(re," = ",A," * ",ie,o),d(K," = ",ne," + ",re,o);for(var S in this.connections.inputs){var _=this.connections.inputs[S],ee=v("aux"),F=v(this,"trace","elegibility",_.ID,this.trace.elegibility[_.ID]);d(ee," = ",ne," * ",F,o);for(var S in this.trace.extended){var C=this.neighboors[S],Z=v(C,"error","responsibility",C.error.responsibility),U=v(this,"trace","extended",C.ID,_.ID,this.trace.extended[C.ID][_.ID]);d(ee," += ",Z," * ",U,o)}var E=v(_,"weight");d(E," += ",b," * ",ee,o)}}d(z," += ",b," * ",K,o)}return{memory:s,inputs:a,outputs:h,targets:c,variables:u,activation_sentences:p,trace_sentences:f,propagation_sentences:l}}},i.connection=function(t,e,n){if(!t||!e)throw"Connection Error: Invalid neurons";this.ID=i.connection.uid(),this.from=t,this.to=e,this.weight="undefined"==typeof n?.2*Math.random()-.1:n,this.gain=1,this.gater=null},i.squash={},i.squash.LOGISTIC=function(t,e){if(!e)return 1/(1+Math.exp(-t));var n=i.squash.LOGISTIC(t);return n*(1-n)},i.squash.TANH=function(t,e){if(e)return 1-Math.pow(i.squash.TANH(t),2);var n=Math.exp(t),r=1/n;return(n-r)/(n+r)},i.squash.IDENTITY=function(t,e){return e?1:t},i.squash.HLIM=function(t,e){return e?1:+(t>0)},function(){var t=0,e=0;i.uid=function(){return t++},i.connection.uid=function(){return e++},i.quantity=function(){return{neurons:t,connections:e}}}(),e&&(e.exports=i)},{}],5:[function(t,e){var i={Neuron:t("./neuron"),Layer:t("./layer"),Network:t("./network"),Trainer:t("./trainer"),Architect:t("./architect")};this.define&&this.define.amd&&define([],i),e&&e.exports&&(e.exports=i),"object"==typeof window&&(i.ninja=function(){delete window.synaptic},window.synaptic=i)},{"./architect":1,"./layer":2,"./network":3,"./neuron":4,"./trainer":6}],6:[function(t,e){function n(t,e){e=e||{},this.network=t,this.rate=e.rate||.5,this.iterations=e.iterations||1e5,this.error=e.error||.005}n.prototype={train:function(t,e){function i(t){for(var e,i,n=t.length;n;e=Math.floor(Math.random()*n),i=t[--n],t[n]=t[e],t[e]=i);return t}var n,r,o,s=1,a=0,c=Date.now();for(e&&(e.shuffle,e.iterations&&(this.iterations=e.iterations),e.error&&(this.error=e.error),e.rate&&(this.rate=e.rate));a<this.iterations&&s>this.error;){s=0;for(var h in t){n=t[h].input,o=t[h].output,r=this.network.activate(n),this.network.propagate(this.rate,o);var u=0;for(var p in r)u+=Math.pow(o[p]-r[p],2);s+=u/r.length}a++,s/=t.length,e&&(e.customLog&&e.customLog.every&&a%e.customLog.every==0?e.customLog.do({error:s,iterations:a}):e.log&&a%e.log==0&&console.log("iterations",a,"error",s),e.shuffle&&i(t))}var f={error:s,iterations:a,time:Date.now()-c};return f},workerTrain:function(t,e,i){function n(t){for(var e,i,n=t.length;n;e=Math.floor(Math.random()*n),i=t[--n],t[n]=t[e],t[e]=i);return t}function r(t){p.postMessage({action:"activate",input:t,memoryBuffer:s.network.optimized.memory},[s.network.optimized.memory.buffer])}function o(t){p.postMessage({action:"propagate",target:t,rate:s.rate,memoryBuffer:s.network.optimized.memory},[s.network.optimized.memory.buffer])}var s=this,a=1,c=0,h=t.length,u=Date.now();i&&(i.shuffle,i.iterations&&(this.iterations=i.iterations),i.error&&(this.error=i.error),i.rate&&(this.rate=i.rate));var p=this.network.worker();p.onmessage=function(p){if(s.network.optimized.ownership(p.data.memoryBuffer),"propagate"==p.data.action&&(f>=h?(f=0,c++,a/=t.length,i&&(i.customLog&&i.customLog.every&&c%i.customLog.every==0?i.customLog.do({error:a,iterations:c}):i.log&&c%i.log==0&&console.log("iterations",c,"error",a),i.shuffle&&n(t)),c<s.iterations&&a>s.error?r(t[f].input):e({error:a,iterations:c,time:Date.now()-u}),a=0):r(t[f].input)),"activate"==p.data.action){var l=0;for(var v in p.data.output)l+=Math.pow(t[f].output-p.data.output[v],2);a+=l/p.data.output.length,o(t[f].output),f++}};var f=0,c=0;r(t[f].input)},XOR:function(t){if(2!=this.network.inputs()||1!=this.network.outputs())throw"Error: Incompatible network (2 inputs, 1 output)";var e={iterations:1e5,log:!1,shuffle:!0};if(t)for(var i in t)e[i]=t[i];return this.train([{input:[0,0],output:[0]},{input:[1,0],output:[1]},{input:[0,1],output:[1]},{input:[1,1],output:[0]}],e)},DSR:function(t){t=t||{};for(var e=t.targets||[2,4,7,8],n=t.distractors||[3,5,6,9],r=t.prompts||[0,1],o=t.length||24,s=t.success||.95,a=t.iterations||1e5,c=t.rate||.1,h=t.log||0,u=t.customLog||{},p=correct=i=N=success=0,f=1,l=e.length+n.length+r.length,v=function(t,e){var i=Math.random()*t|0,n=!1;for(var r in e)i==e[r]&&(n=!0);return n?v(t,e):i},d=function(t,e){for(var i in t)if(Math.round(t[i])!=e[i])return!1;return!0},g=Date.now();a>p&&(s>success||p%1e3!=0);){var y=[],m=o-r.length;for(i=0;m>i;i++){var w=Math.random()*n.length|0;y.push(n[w])}var I=[],b=[];for(i=0;i<r.length;i++)I.push(Math.random()*e.length|0),b.push(v(m,b));for(b=b.sort(),i=0;i<r.length;i++)y[b[i]]=e[I[i]],y.push(r[i]);var T=distractorsCorrect=0;for(f=0,i=0;o>i;i++){var D=[];for(N=0;l>N;N++)D[N]=0;D[y[i]]=1;var O=[];for(N=0;N<e.length;N++)O[N]=0;if(i>=m){var z=i-m;O[I[z]]=1}var j=this.network.activate(D);d(j,O)?m>i?distractorsCorrect++:T++:this.network.propagate(c,O);var x=0;for(var N in j)x+=Math.pow(O[N]-j[N],2);f+=x/this.network.outputs(),distractorsCorrect+T==o&&correct++}p%1e3==0&&(correct=0),p++;var _=p%1e3;_=0==_?1e3:_,success=correct/_,f/=o,h&&p%h==0&&console.log("iterations:",p," success:",success," correct:",correct," time:",Date.now()-g," error:",f),u.do&&u.every&&p%u.every==0&&u.do({iterations:p,success:success,error:f,time:Date.now()-g,correct:correct})}return{iterations:p,success:success,error:f,time:Date.now()-g}},ERG:function(t){t=t||{};var e=t.iterations||15e4,i=t.error||.05,n=t.rate||.1,r=t.log||500,o=function(){this.paths=[]};o.prototype={connect:function(t,e){return this.paths.push({node:t,value:e}),this},any:function(){if(0==this.paths.length)return!1;var t=Math.random()*this.paths.length|0;return this.paths[t]},test:function(t){for(var e in this.paths)if(this.paths[e].value==t)return this.paths[e];return!1}};for(var s=function(){var t=new o,e=(new o).connect(t,"E"),i=(new o).connect(e,"S"),n=(new o).connect(e,"V").connect(i,"P"),r=(new o).connect(i,"X");r.connect(r,"S");var s=(new o).connect(n,"V");s.connect(s,"T"),i.connect(s,"X");var a=(new o).connect(r,"T").connect(s,"P"),c=(new o).connect(a,"B");return{input:c,output:t}},a=function(){var t=s(),e=s(),i=new o,n=(new o).connect(i,"E");t.output.connect(n,"T"),e.output.connect(n,"P");var r=(new o).connect(t.input,"P").connect(e.input,"T"),a=(new o).connect(r,"B");return{input:a,output:i}},c=function(){for(var t=a().input,e=t.any(),i="";e;)i+=e.value,e=e.node.any();return i},h=function(t){for(var e=a().input,i=0,n=t.charAt(i);i<t.length;){var r=e.test(n);if(!r)return!1;e=r.node,n=t.charAt(++i)}return!0},u=function(t,e){var i=0,n=-1,r=0,o=-1;for(var s in t)t[s]>i&&(i=t[s],n=s),e[s]>r&&(r=e[s],o=s);return n!=o},p=0,f=1,l={B:0,P:1,T:2,X:3,S:4,E:5},v=Date.now();e>p&&f>i;){var d=0;f=0;for(var g=c(),y=g.charAt(d),m=g.charAt(d+1);d<g.length-1;){for(var w=[],I=[],b=0;6>b;b++)w[b]=0,I[b]=0;w[l[y]]=1,I[l[m]]=1;var T=this.network.activate(w);u(T,I)&&this.network.propagate(n,I),y=g.charAt(++d),m=g.charAt(d+1);var D=0;for(var O in T)D+=Math.pow(I[O]-T[O],2);D/=T.length,f+=D}f/=g.length,p++,p%r==0&&console.log("iterations:",p," time:",Date.now()-v," error:",f)}return{iterations:p,error:f,time:Date.now()-v,test:h,generate:c}}},e&&(e.exports=n)},{}]},{},[5]);
var Neuron = synaptic.Neuron, Layer = synaptic.Layer, Network = synaptic.Network, Trainer = synaptic.Trainer, Architect = synaptic.Architect;